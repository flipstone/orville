---
version: 2.1
jobs:
  postgresql-96-and-ghc901:
    machine:
      image: ubuntu-2004:202101-01
    steps:
      - checkout
      - run:
          name: make sure dockerfile is built
          command: cd orville-postgresql-libpq && docker-compose build -q
      - run:
          name: run tests against ghc9.0.1 (stackage nightly-2021-06-29)
          command: cd orville-postgresql-libpq && docker-compose run --rm dev stack --stack-yaml stack-nightly-2021-06-29.yml test --ghc-options=-j --flag orville-postgresql-libpq:ci

  postgresql-96-and-ghc8104:
    machine:
      image: ubuntu-2004:202101-01
    steps:
      - checkout
      - run:
          name: make sure dockerfile is built
          command: cd orville-postgresql-libpq && docker-compose build -q
      - run:
          name: run tests against ghc8.10.4 (stackage lts-17.3)
          command: cd orville-postgresql-libpq && docker-compose run --rm dev stack --stack-yaml stack-lts-17.3.yml test --ghc-options=-j --flag orville-postgresql-libpq:ci

  postgresql-96-and-ghc8103:
    machine:
      image: ubuntu-2004:202101-01
    steps:
      - checkout
      - run:
          name: make sure dockerfile is built
          command: cd orville-postgresql-libpq && docker-compose build -q
      - run:
          name: run tests against ghc8.10.3 (stackage lts-17.0)
          command: cd orville-postgresql-libpq && docker-compose run --rm dev stack --stack-yaml stack-lts-17.0.yml test --ghc-options=-j --flag orville-postgresql-libpq:ci

  postgresql-96-and-ghc884:
    machine:
      image: ubuntu-2004:202101-01
    steps:
      - checkout
      - run:
          name: make sure dockerfile is built
          command: cd orville-postgresql-libpq && docker-compose build -q
      - run:
          name: run tests against ghc8.8.4 (stackage lts-16.12)
          command: cd orville-postgresql-libpq && docker-compose run --rm dev stack --stack-yaml stack-lts-16.12.yml test --ghc-options=-j --flag orville-postgresql-libpq:ci

  formatting-check:
    machine:
      image: ubuntu-2004:202101-01
    steps:
      - checkout
      - restore_cache:
          keys:
            # Note that format-repo.sh is where we have the version of fourmolu set
            - tooling-lint-v1-{{ checksum "orville-postgresql-libpq/scripts/format-repo.sh" }}
      - run:
          name: make sure dockerfile is built
          command: cd orville-postgresql-libpq && docker-compose -f docker-compose.ci-lint.yml build -q
      - run:
          name: run formatting so we can see if there is a diff
          command: cd orville-postgresql-libpq && docker-compose -f docker-compose.ci-lint.yml run --rm lint sh -c ./scripts/format-repo.sh && sudo chown -R circleci:circleci .stack-root
      - save_cache:
          paths:
            - orville-postgresql-libpq/.stack-root
          # Note that format-repo.sh is where we have the version of fourmolu set
          key: tooling-lint-v1-{{ checksum "orville-postgresql-libpq/scripts/format-repo.sh" }}
      - run:
          name: check for formatting diff
          command: cd orville-postgresql-libpq && sh -c scripts/format-check-ci.sh

workflows:
  version: 2.0
  test:
    jobs:
      - postgresql-96-and-ghc884
      - postgresql-96-and-ghc8103
      - postgresql-96-and-ghc8104
      - postgresql-96-and-ghc901
      - formatting-check
